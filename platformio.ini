; PlatformIO Project Configuration File for MiniCore
; https://github.com/MCUdude/MiniCore/
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed, and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options
; https://github.com/MCUdude/MiniCore/blob/master/PlatformIO.md
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = LCD_noMAX ; Default build target


; Common settings for all environments
[env]
platform = atmelavr
framework = arduino


; TARGET SETTINGS
; Chip in use
board = ATmega328P
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L

; BUILD OPTIONS
; Comment out to enable LTO (this line unflags it)
build_unflags = -flto
; Extra build flags
;build_flags = 
lib_deps = blackhack/LCD_I2C@^2.3.0
           miguel5612/ThermistorLibrary@^1.0.6
	   br3ttb/PID@^1.2.1
	   button=https://github.com/e-tinkers/button


; SERIAL MONITOR OPTIONS
; Serial monitor port defined in the Upload_UART environment
monitor_port = ${env:Upload_UART.upload_port}
; Serial monitor baud rate
monitor_speed = 9600

;  Serial bootloader protocol
upload_protocol = arduino
; Serial upload port
upload_port = /dev/ttyUSB0
; Get upload baud rate defined in the fuses_bootloader environment
board_upload.speed = ${env:fuses_bootloader.board_bootloader.speed}

; Normal Version
[env:LCD_noMAX]
build_flags=
        -DLCD16X2
	-DTHERMLIB

; V3 Oficial
[env:Version3]
build_flags=
          -DSSD1306
	  -DMAX31855


; Run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; Run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
[env:fuses_bootloader]
board_hardware.oscillator = external ; Oscillator type
board_hardware.uart = uart0   ; Set UART to use for serial upload
;board_bootloader.speed = 115200      ; Set bootloader baud rate
board_bootloader.speed = 57600      ; Set bootloader baud rate
board_hardware.bod = 2.7v            ; Set brown-out detection
board_hardware.eesave = yes          ; Preserve EEPROM when uploading using programmer
upload_protocol = usbasp             ; Use the USBasp as programmer
upload_flags =                       ; Select USB as upload port and divide the SPI clock by 8
  -P/dev/ttyUSB0
  -B8

